/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.grids.tables.records;


import gov.epa.bencloud.server.database.jooq.grids.tables.UsState;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsStateRecord extends UpdatableRecordImpl<UsStateRecord> implements Record6<Integer, String, String, Short, Short, Object> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>grids.us_state.gid</code>.
     */
    public void setGid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>grids.us_state.gid</code>.
     */
    public Integer getGid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>grids.us_state.state_name</code>.
     */
    public void setStateName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>grids.us_state.state_name</code>.
     */
    public String getStateName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>grids.us_state.state_fips</code>.
     */
    public void setStateFips(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>grids.us_state.state_fips</code>.
     */
    public String getStateFips() {
        return (String) get(2);
    }

    /**
     * Setter for <code>grids.us_state.col</code>.
     */
    public void setCol(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>grids.us_state.col</code>.
     */
    public Short getCol() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>grids.us_state.row</code>.
     */
    public void setRow(Short value) {
        set(4, value);
    }

    /**
     * Getter for <code>grids.us_state.row</code>.
     */
    public Short getRow() {
        return (Short) get(4);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public void setGeom(Object value) {
        set(5, value);
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public Object getGeom() {
        return get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, Short, Short, Object> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, Short, Short, Object> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UsState.US_STATE.GID;
    }

    @Override
    public Field<String> field2() {
        return UsState.US_STATE.STATE_NAME;
    }

    @Override
    public Field<String> field3() {
        return UsState.US_STATE.STATE_FIPS;
    }

    @Override
    public Field<Short> field4() {
        return UsState.US_STATE.COL;
    }

    @Override
    public Field<Short> field5() {
        return UsState.US_STATE.ROW;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Field<Object> field6() {
        return UsState.US_STATE.GEOM;
    }

    @Override
    public Integer component1() {
        return getGid();
    }

    @Override
    public String component2() {
        return getStateName();
    }

    @Override
    public String component3() {
        return getStateFips();
    }

    @Override
    public Short component4() {
        return getCol();
    }

    @Override
    public Short component5() {
        return getRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object component6() {
        return getGeom();
    }

    @Override
    public Integer value1() {
        return getGid();
    }

    @Override
    public String value2() {
        return getStateName();
    }

    @Override
    public String value3() {
        return getStateFips();
    }

    @Override
    public Short value4() {
        return getCol();
    }

    @Override
    public Short value5() {
        return getRow();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public Object value6() {
        return getGeom();
    }

    @Override
    public UsStateRecord value1(Integer value) {
        setGid(value);
        return this;
    }

    @Override
    public UsStateRecord value2(String value) {
        setStateName(value);
        return this;
    }

    @Override
    public UsStateRecord value3(String value) {
        setStateFips(value);
        return this;
    }

    @Override
    public UsStateRecord value4(Short value) {
        setCol(value);
        return this;
    }

    @Override
    public UsStateRecord value5(Short value) {
        setRow(value);
        return this;
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    @Override
    public UsStateRecord value6(Object value) {
        setGeom(value);
        return this;
    }

    @Override
    public UsStateRecord values(Integer value1, String value2, String value3, Short value4, Short value5, Object value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsStateRecord
     */
    public UsStateRecord() {
        super(UsState.US_STATE);
    }

    /**
     * Create a detached, initialised UsStateRecord
     */
    public UsStateRecord(Integer gid, String stateName, String stateFips, Short col, Short row, Object geom) {
        super(UsState.US_STATE);

        setGid(gid);
        setStateName(stateName);
        setStateFips(stateFips);
        setCol(col);
        setRow(row);
        setGeom(geom);
    }
}
