/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.data.tables;


import gov.epa.bencloud.server.database.jooq.data.Data;
import gov.epa.bencloud.server.database.jooq.data.Keys;
import gov.epa.bencloud.server.database.jooq.data.tables.records.PopulationDatasetRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PopulationDataset extends TableImpl<PopulationDatasetRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.population_dataset</code>
     */
    public static final PopulationDataset POPULATION_DATASET = new PopulationDataset();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PopulationDatasetRecord> getRecordType() {
        return PopulationDatasetRecord.class;
    }

    /**
     * The column <code>data.population_dataset.id</code>.
     */
    public final TableField<PopulationDatasetRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>data.population_dataset.name</code>.
     */
    public final TableField<PopulationDatasetRecord, String> NAME = createField(DSL.name("name"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>data.population_dataset.pop_config_id</code>.
     */
    public final TableField<PopulationDatasetRecord, Integer> POP_CONFIG_ID = createField(DSL.name("pop_config_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_dataset.grid_definition_id</code>.
     */
    public final TableField<PopulationDatasetRecord, Integer> GRID_DEFINITION_ID = createField(DSL.name("grid_definition_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_dataset.apply_growth</code>.
     */
    public final TableField<PopulationDatasetRecord, Integer> APPLY_GROWTH = createField(DSL.name("apply_growth"), SQLDataType.INTEGER, this, "");

    private PopulationDataset(Name alias, Table<PopulationDatasetRecord> aliased) {
        this(alias, aliased, null);
    }

    private PopulationDataset(Name alias, Table<PopulationDatasetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.population_dataset</code> table reference
     */
    public PopulationDataset(String alias) {
        this(DSL.name(alias), POPULATION_DATASET);
    }

    /**
     * Create an aliased <code>data.population_dataset</code> table reference
     */
    public PopulationDataset(Name alias) {
        this(alias, POPULATION_DATASET);
    }

    /**
     * Create a <code>data.population_dataset</code> table reference
     */
    public PopulationDataset() {
        this(DSL.name("population_dataset"), null);
    }

    public <O extends Record> PopulationDataset(Table<O> child, ForeignKey<O, PopulationDatasetRecord> key) {
        super(child, key, POPULATION_DATASET);
    }

    @Override
    public Schema getSchema() {
        return Data.DATA;
    }

    @Override
    public Identity<PopulationDatasetRecord, Integer> getIdentity() {
        return (Identity<PopulationDatasetRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<PopulationDatasetRecord> getPrimaryKey() {
        return Keys.POPULATION_DATASET_PKEY;
    }

    @Override
    public List<UniqueKey<PopulationDatasetRecord>> getKeys() {
        return Arrays.<UniqueKey<PopulationDatasetRecord>>asList(Keys.POPULATION_DATASET_PKEY);
    }

    @Override
    public List<ForeignKey<PopulationDatasetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PopulationDatasetRecord, ?>>asList(Keys.POPULATION_DATASET__POPULATION_DATASET_POP_CONFIG_ID_FKEY);
    }

    private transient PopConfig _popConfig;

    public PopConfig popConfig() {
        if (_popConfig == null)
            _popConfig = new PopConfig(this, Keys.POPULATION_DATASET__POPULATION_DATASET_POP_CONFIG_ID_FKEY);

        return _popConfig;
    }

    @Override
    public PopulationDataset as(String alias) {
        return new PopulationDataset(DSL.name(alias), this);
    }

    @Override
    public PopulationDataset as(Name alias) {
        return new PopulationDataset(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PopulationDataset rename(String name) {
        return new PopulationDataset(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PopulationDataset rename(Name name) {
        return new PopulationDataset(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
