/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables;


import gov.epa.bencloud.server.database.jooq.Data;
import gov.epa.bencloud.server.database.jooq.Keys;
import gov.epa.bencloud.server.database.jooq.tables.records.IncomeGrowthAdjFactorRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IncomeGrowthAdjFactor extends TableImpl<IncomeGrowthAdjFactorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.income_growth_adj_factor</code>
     */
    public static final IncomeGrowthAdjFactor INCOME_GROWTH_ADJ_FACTOR = new IncomeGrowthAdjFactor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IncomeGrowthAdjFactorRecord> getRecordType() {
        return IncomeGrowthAdjFactorRecord.class;
    }

    /**
     * The column <code>data.income_growth_adj_factor.id</code>.
     */
    public final TableField<IncomeGrowthAdjFactorRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>data.income_growth_adj_factor.income_growth_adj_dataset_id</code>.
     */
    public final TableField<IncomeGrowthAdjFactorRecord, Short> INCOME_GROWTH_ADJ_DATASET_ID = createField(DSL.name("income_growth_adj_dataset_id"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>data.income_growth_adj_factor.growth_year</code>.
     */
    public final TableField<IncomeGrowthAdjFactorRecord, Short> GROWTH_YEAR = createField(DSL.name("growth_year"), SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>data.income_growth_adj_factor.mean_value</code>.
     */
    public final TableField<IncomeGrowthAdjFactorRecord, BigDecimal> MEAN_VALUE = createField(DSL.name("mean_value"), SQLDataType.NUMERIC.nullable(false), this, "");

    /**
     * The column <code>data.income_growth_adj_factor.endpoint_group_id</code>.
     */
    public final TableField<IncomeGrowthAdjFactorRecord, Short> ENDPOINT_GROUP_ID = createField(DSL.name("endpoint_group_id"), SQLDataType.SMALLINT.nullable(false), this, "");

    private IncomeGrowthAdjFactor(Name alias, Table<IncomeGrowthAdjFactorRecord> aliased) {
        this(alias, aliased, null);
    }

    private IncomeGrowthAdjFactor(Name alias, Table<IncomeGrowthAdjFactorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.income_growth_adj_factor</code> table reference
     */
    public IncomeGrowthAdjFactor(String alias) {
        this(DSL.name(alias), INCOME_GROWTH_ADJ_FACTOR);
    }

    /**
     * Create an aliased <code>data.income_growth_adj_factor</code> table reference
     */
    public IncomeGrowthAdjFactor(Name alias) {
        this(alias, INCOME_GROWTH_ADJ_FACTOR);
    }

    /**
     * Create a <code>data.income_growth_adj_factor</code> table reference
     */
    public IncomeGrowthAdjFactor() {
        this(DSL.name("income_growth_adj_factor"), null);
    }

    public <O extends Record> IncomeGrowthAdjFactor(Table<O> child, ForeignKey<O, IncomeGrowthAdjFactorRecord> key) {
        super(child, key, INCOME_GROWTH_ADJ_FACTOR);
    }

    @Override
    public Schema getSchema() {
        return Data.DATA;
    }

    @Override
    public Identity<IncomeGrowthAdjFactorRecord, Integer> getIdentity() {
        return (Identity<IncomeGrowthAdjFactorRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<IncomeGrowthAdjFactorRecord> getPrimaryKey() {
        return Keys.INCOME_GROWTH_ADJ_FACTOR_PKEY;
    }

    @Override
    public List<UniqueKey<IncomeGrowthAdjFactorRecord>> getKeys() {
        return Arrays.<UniqueKey<IncomeGrowthAdjFactorRecord>>asList(Keys.INCOME_GROWTH_ADJ_FACTOR_PKEY);
    }

    @Override
    public List<ForeignKey<IncomeGrowthAdjFactorRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IncomeGrowthAdjFactorRecord, ?>>asList(Keys.INCOME_GROWTH_ADJ_FACTOR__INCOME_GROWTH_ADJ_FACTOR_INCOME_GROWTH_ADJ_DATASET_ID_FKEY, Keys.INCOME_GROWTH_ADJ_FACTOR__INCOME_GROWTH_ADJ_FACTOR_ENDPOINT_GROUP_ID_FKEY);
    }

    private transient IncomeGrowthAdjDataset _incomeGrowthAdjDataset;
    private transient EndpointGroup _endpointGroup;

    public IncomeGrowthAdjDataset incomeGrowthAdjDataset() {
        if (_incomeGrowthAdjDataset == null)
            _incomeGrowthAdjDataset = new IncomeGrowthAdjDataset(this, Keys.INCOME_GROWTH_ADJ_FACTOR__INCOME_GROWTH_ADJ_FACTOR_INCOME_GROWTH_ADJ_DATASET_ID_FKEY);

        return _incomeGrowthAdjDataset;
    }

    public EndpointGroup endpointGroup() {
        if (_endpointGroup == null)
            _endpointGroup = new EndpointGroup(this, Keys.INCOME_GROWTH_ADJ_FACTOR__INCOME_GROWTH_ADJ_FACTOR_ENDPOINT_GROUP_ID_FKEY);

        return _endpointGroup;
    }

    @Override
    public IncomeGrowthAdjFactor as(String alias) {
        return new IncomeGrowthAdjFactor(DSL.name(alias), this);
    }

    @Override
    public IncomeGrowthAdjFactor as(Name alias) {
        return new IncomeGrowthAdjFactor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IncomeGrowthAdjFactor rename(String name) {
        return new IncomeGrowthAdjFactor(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IncomeGrowthAdjFactor rename(Name name) {
        return new IncomeGrowthAdjFactor(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Short, Short, BigDecimal, Short> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
