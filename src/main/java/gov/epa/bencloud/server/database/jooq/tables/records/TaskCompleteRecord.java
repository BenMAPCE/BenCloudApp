/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables.records;


import gov.epa.bencloud.server.database.jooq.tables.TaskComplete;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskCompleteRecord extends UpdatableRecordImpl<TaskCompleteRecord> implements Record11<Long, String, String, Integer, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data.task_complete.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>data.task_complete.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>data.task_complete.task_uuid</code>.
     */
    public void setTaskUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>data.task_complete.task_uuid</code>.
     */
    public String getTaskUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>data.task_complete.user_identifier</code>.
     */
    public void setUserIdentifier(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>data.task_complete.user_identifier</code>.
     */
    public String getUserIdentifier() {
        return (String) get(2);
    }

    /**
     * Setter for <code>data.task_complete.priority</code>.
     */
    public void setPriority(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>data.task_complete.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>data.task_complete.task_name</code>.
     */
    public void setTaskName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>data.task_complete.task_name</code>.
     */
    public String getTaskName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>data.task_complete.task_description</code>.
     */
    public void setTaskDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>data.task_complete.task_description</code>.
     */
    public String getTaskDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>data.task_complete.task_data</code>.
     */
    public void setTaskData(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>data.task_complete.task_data</code>.
     */
    public String getTaskData() {
        return (String) get(6);
    }

    /**
     * Setter for <code>data.task_complete.task_results</code>.
     */
    public void setTaskResults(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>data.task_complete.task_results</code>.
     */
    public String getTaskResults() {
        return (String) get(7);
    }

    /**
     * Setter for <code>data.task_complete.submitted_date</code>.
     */
    public void setSubmittedDate(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>data.task_complete.submitted_date</code>.
     */
    public LocalDateTime getSubmittedDate() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>data.task_complete.started_date</code>.
     */
    public void setStartedDate(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>data.task_complete.started_date</code>.
     */
    public LocalDateTime getStartedDate() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>data.task_complete.completed_date</code>.
     */
    public void setCompletedDate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>data.task_complete.completed_date</code>.
     */
    public LocalDateTime getCompletedDate() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, String, Integer, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, String, Integer, String, String, String, String, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TaskComplete.TASK_COMPLETE.ID;
    }

    @Override
    public Field<String> field2() {
        return TaskComplete.TASK_COMPLETE.TASK_UUID;
    }

    @Override
    public Field<String> field3() {
        return TaskComplete.TASK_COMPLETE.USER_IDENTIFIER;
    }

    @Override
    public Field<Integer> field4() {
        return TaskComplete.TASK_COMPLETE.PRIORITY;
    }

    @Override
    public Field<String> field5() {
        return TaskComplete.TASK_COMPLETE.TASK_NAME;
    }

    @Override
    public Field<String> field6() {
        return TaskComplete.TASK_COMPLETE.TASK_DESCRIPTION;
    }

    @Override
    public Field<String> field7() {
        return TaskComplete.TASK_COMPLETE.TASK_DATA;
    }

    @Override
    public Field<String> field8() {
        return TaskComplete.TASK_COMPLETE.TASK_RESULTS;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return TaskComplete.TASK_COMPLETE.SUBMITTED_DATE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return TaskComplete.TASK_COMPLETE.STARTED_DATE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return TaskComplete.TASK_COMPLETE.COMPLETED_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTaskUuid();
    }

    @Override
    public String component3() {
        return getUserIdentifier();
    }

    @Override
    public Integer component4() {
        return getPriority();
    }

    @Override
    public String component5() {
        return getTaskName();
    }

    @Override
    public String component6() {
        return getTaskDescription();
    }

    @Override
    public String component7() {
        return getTaskData();
    }

    @Override
    public String component8() {
        return getTaskResults();
    }

    @Override
    public LocalDateTime component9() {
        return getSubmittedDate();
    }

    @Override
    public LocalDateTime component10() {
        return getStartedDate();
    }

    @Override
    public LocalDateTime component11() {
        return getCompletedDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTaskUuid();
    }

    @Override
    public String value3() {
        return getUserIdentifier();
    }

    @Override
    public Integer value4() {
        return getPriority();
    }

    @Override
    public String value5() {
        return getTaskName();
    }

    @Override
    public String value6() {
        return getTaskDescription();
    }

    @Override
    public String value7() {
        return getTaskData();
    }

    @Override
    public String value8() {
        return getTaskResults();
    }

    @Override
    public LocalDateTime value9() {
        return getSubmittedDate();
    }

    @Override
    public LocalDateTime value10() {
        return getStartedDate();
    }

    @Override
    public LocalDateTime value11() {
        return getCompletedDate();
    }

    @Override
    public TaskCompleteRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value2(String value) {
        setTaskUuid(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value3(String value) {
        setUserIdentifier(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value4(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value5(String value) {
        setTaskName(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value6(String value) {
        setTaskDescription(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value7(String value) {
        setTaskData(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value8(String value) {
        setTaskResults(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value9(LocalDateTime value) {
        setSubmittedDate(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value10(LocalDateTime value) {
        setStartedDate(value);
        return this;
    }

    @Override
    public TaskCompleteRecord value11(LocalDateTime value) {
        setCompletedDate(value);
        return this;
    }

    @Override
    public TaskCompleteRecord values(Long value1, String value2, String value3, Integer value4, String value5, String value6, String value7, String value8, LocalDateTime value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskCompleteRecord
     */
    public TaskCompleteRecord() {
        super(TaskComplete.TASK_COMPLETE);
    }

    /**
     * Create a detached, initialised TaskCompleteRecord
     */
    public TaskCompleteRecord(Long id, String taskUuid, String userIdentifier, Integer priority, String taskName, String taskDescription, String taskData, String taskResults, LocalDateTime submittedDate, LocalDateTime startedDate, LocalDateTime completedDate) {
        super(TaskComplete.TASK_COMPLETE);

        setId(id);
        setTaskUuid(taskUuid);
        setUserIdentifier(userIdentifier);
        setPriority(priority);
        setTaskName(taskName);
        setTaskDescription(taskDescription);
        setTaskData(taskData);
        setTaskResults(taskResults);
        setSubmittedDate(submittedDate);
        setStartedDate(startedDate);
        setCompletedDate(completedDate);
    }
}
