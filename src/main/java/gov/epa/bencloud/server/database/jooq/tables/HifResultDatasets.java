/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables;


import gov.epa.bencloud.server.database.jooq.Data;
import gov.epa.bencloud.server.database.jooq.Keys;
import gov.epa.bencloud.server.database.jooq.tables.records.HifResultDatasetsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HifResultDatasets extends TableImpl<HifResultDatasetsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.hif_result_datasets</code>
     */
    public static final HifResultDatasets HIF_RESULT_DATASETS = new HifResultDatasets();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HifResultDatasetsRecord> getRecordType() {
        return HifResultDatasetsRecord.class;
    }

    /**
     * The column <code>data.hif_result_datasets.id</code>.
     */
    public final TableField<HifResultDatasetsRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>data.hif_result_datasets.task_uuid</code>.
     */
    public final TableField<HifResultDatasetsRecord, String> TASK_UUID = createField(DSL.name("task_uuid"), SQLDataType.CLOB, this, "");

    private HifResultDatasets(Name alias, Table<HifResultDatasetsRecord> aliased) {
        this(alias, aliased, null);
    }

    private HifResultDatasets(Name alias, Table<HifResultDatasetsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.hif_result_datasets</code> table reference
     */
    public HifResultDatasets(String alias) {
        this(DSL.name(alias), HIF_RESULT_DATASETS);
    }

    /**
     * Create an aliased <code>data.hif_result_datasets</code> table reference
     */
    public HifResultDatasets(Name alias) {
        this(alias, HIF_RESULT_DATASETS);
    }

    /**
     * Create a <code>data.hif_result_datasets</code> table reference
     */
    public HifResultDatasets() {
        this(DSL.name("hif_result_datasets"), null);
    }

    public <O extends Record> HifResultDatasets(Table<O> child, ForeignKey<O, HifResultDatasetsRecord> key) {
        super(child, key, HIF_RESULT_DATASETS);
    }

    @Override
    public Schema getSchema() {
        return Data.DATA;
    }

    @Override
    public Identity<HifResultDatasetsRecord, Integer> getIdentity() {
        return (Identity<HifResultDatasetsRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<HifResultDatasetsRecord> getPrimaryKey() {
        return Keys.HIF_RESULT_DATASETS_PKEY;
    }

    @Override
    public List<UniqueKey<HifResultDatasetsRecord>> getKeys() {
        return Arrays.<UniqueKey<HifResultDatasetsRecord>>asList(Keys.HIF_RESULT_DATASETS_PKEY);
    }

    @Override
    public HifResultDatasets as(String alias) {
        return new HifResultDatasets(DSL.name(alias), this);
    }

    @Override
    public HifResultDatasets as(Name alias) {
        return new HifResultDatasets(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HifResultDatasets rename(String name) {
        return new HifResultDatasets(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HifResultDatasets rename(Name name) {
        return new HifResultDatasets(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
