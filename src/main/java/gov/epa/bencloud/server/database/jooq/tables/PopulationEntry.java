/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables;


import gov.epa.bencloud.server.database.jooq.Data;
import gov.epa.bencloud.server.database.jooq.tables.records.PopulationEntryRecord;

import java.math.BigDecimal;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PopulationEntry extends TableImpl<PopulationEntryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.population_entry</code>
     */
    public static final PopulationEntry POPULATION_ENTRY = new PopulationEntry();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PopulationEntryRecord> getRecordType() {
        return PopulationEntryRecord.class;
    }

    /**
     * The column <code>data.population_entry.pop_dataset_id</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> POP_DATASET_ID = createField(DSL.name("pop_dataset_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.race_id</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> RACE_ID = createField(DSL.name("race_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.ethnicity_id</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> ETHNICITY_ID = createField(DSL.name("ethnicity_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.gender_id</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> GENDER_ID = createField(DSL.name("gender_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.age_range_id</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> AGE_RANGE_ID = createField(DSL.name("age_range_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.grid_col</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> GRID_COL = createField(DSL.name("grid_col"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.grid_row</code>.
     */
    public final TableField<PopulationEntryRecord, Integer> GRID_ROW = createField(DSL.name("grid_row"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.population_entry.pop_year</code>.
     */
    public final TableField<PopulationEntryRecord, Short> POP_YEAR = createField(DSL.name("pop_year"), SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>data.population_entry.pop_value</code>.
     */
    public final TableField<PopulationEntryRecord, BigDecimal> POP_VALUE = createField(DSL.name("pop_value"), SQLDataType.NUMERIC, this, "");

    private PopulationEntry(Name alias, Table<PopulationEntryRecord> aliased) {
        this(alias, aliased, null);
    }

    private PopulationEntry(Name alias, Table<PopulationEntryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.population_entry</code> table reference
     */
    public PopulationEntry(String alias) {
        this(DSL.name(alias), POPULATION_ENTRY);
    }

    /**
     * Create an aliased <code>data.population_entry</code> table reference
     */
    public PopulationEntry(Name alias) {
        this(alias, POPULATION_ENTRY);
    }

    /**
     * Create a <code>data.population_entry</code> table reference
     */
    public PopulationEntry() {
        this(DSL.name("population_entry"), null);
    }

    public <O extends Record> PopulationEntry(Table<O> child, ForeignKey<O, PopulationEntryRecord> key) {
        super(child, key, POPULATION_ENTRY);
    }

    @Override
    public Schema getSchema() {
        return Data.DATA;
    }

    @Override
    public PopulationEntry as(String alias) {
        return new PopulationEntry(DSL.name(alias), this);
    }

    @Override
    public PopulationEntry as(Name alias) {
        return new PopulationEntry(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PopulationEntry rename(String name) {
        return new PopulationEntry(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PopulationEntry rename(Name name) {
        return new PopulationEntry(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Short, BigDecimal> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
