/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables.records;


import gov.epa.bencloud.server.database.jooq.tables.TaskQueue;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskQueueRecord extends TableRecordImpl<TaskQueueRecord> implements Record9<Integer, String, Integer, String, String, String, String, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data.task_queue.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>data.task_queue.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>data.task_queue.user_identifier</code>.
     */
    public void setUserIdentifier(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>data.task_queue.user_identifier</code>.
     */
    public String getUserIdentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>data.task_queue.priority</code>.
     */
    public void setPriority(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>data.task_queue.priority</code>.
     */
    public Integer getPriority() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>data.task_queue.task_uuid</code>.
     */
    public void setTaskUuid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>data.task_queue.task_uuid</code>.
     */
    public String getTaskUuid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>data.task_queue.task_name</code>.
     */
    public void setTaskName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>data.task_queue.task_name</code>.
     */
    public String getTaskName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>data.task_queue.task_description</code>.
     */
    public void setTaskDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>data.task_queue.task_description</code>.
     */
    public String getTaskDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>data.task_queue.task_data</code>.
     */
    public void setTaskData(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>data.task_queue.task_data</code>.
     */
    public String getTaskData() {
        return (String) get(6);
    }

    /**
     * Setter for <code>data.task_queue.in_process</code>.
     */
    public void setInProcess(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>data.task_queue.in_process</code>.
     */
    public Boolean getInProcess() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>data.task_queue.submitted_date</code>.
     */
    public void setSubmittedDate(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>data.task_queue.submitted_date</code>.
     */
    public LocalDateTime getSubmittedDate() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, Integer, String, String, String, String, Boolean, LocalDateTime> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, Integer, String, String, String, String, Boolean, LocalDateTime> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return TaskQueue.TASK_QUEUE.ID;
    }

    @Override
    public Field<String> field2() {
        return TaskQueue.TASK_QUEUE.USER_IDENTIFIER;
    }

    @Override
    public Field<Integer> field3() {
        return TaskQueue.TASK_QUEUE.PRIORITY;
    }

    @Override
    public Field<String> field4() {
        return TaskQueue.TASK_QUEUE.TASK_UUID;
    }

    @Override
    public Field<String> field5() {
        return TaskQueue.TASK_QUEUE.TASK_NAME;
    }

    @Override
    public Field<String> field6() {
        return TaskQueue.TASK_QUEUE.TASK_DESCRIPTION;
    }

    @Override
    public Field<String> field7() {
        return TaskQueue.TASK_QUEUE.TASK_DATA;
    }

    @Override
    public Field<Boolean> field8() {
        return TaskQueue.TASK_QUEUE.IN_PROCESS;
    }

    @Override
    public Field<LocalDateTime> field9() {
        return TaskQueue.TASK_QUEUE.SUBMITTED_DATE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserIdentifier();
    }

    @Override
    public Integer component3() {
        return getPriority();
    }

    @Override
    public String component4() {
        return getTaskUuid();
    }

    @Override
    public String component5() {
        return getTaskName();
    }

    @Override
    public String component6() {
        return getTaskDescription();
    }

    @Override
    public String component7() {
        return getTaskData();
    }

    @Override
    public Boolean component8() {
        return getInProcess();
    }

    @Override
    public LocalDateTime component9() {
        return getSubmittedDate();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserIdentifier();
    }

    @Override
    public Integer value3() {
        return getPriority();
    }

    @Override
    public String value4() {
        return getTaskUuid();
    }

    @Override
    public String value5() {
        return getTaskName();
    }

    @Override
    public String value6() {
        return getTaskDescription();
    }

    @Override
    public String value7() {
        return getTaskData();
    }

    @Override
    public Boolean value8() {
        return getInProcess();
    }

    @Override
    public LocalDateTime value9() {
        return getSubmittedDate();
    }

    @Override
    public TaskQueueRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TaskQueueRecord value2(String value) {
        setUserIdentifier(value);
        return this;
    }

    @Override
    public TaskQueueRecord value3(Integer value) {
        setPriority(value);
        return this;
    }

    @Override
    public TaskQueueRecord value4(String value) {
        setTaskUuid(value);
        return this;
    }

    @Override
    public TaskQueueRecord value5(String value) {
        setTaskName(value);
        return this;
    }

    @Override
    public TaskQueueRecord value6(String value) {
        setTaskDescription(value);
        return this;
    }

    @Override
    public TaskQueueRecord value7(String value) {
        setTaskData(value);
        return this;
    }

    @Override
    public TaskQueueRecord value8(Boolean value) {
        setInProcess(value);
        return this;
    }

    @Override
    public TaskQueueRecord value9(LocalDateTime value) {
        setSubmittedDate(value);
        return this;
    }

    @Override
    public TaskQueueRecord values(Integer value1, String value2, Integer value3, String value4, String value5, String value6, String value7, Boolean value8, LocalDateTime value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskQueueRecord
     */
    public TaskQueueRecord() {
        super(TaskQueue.TASK_QUEUE);
    }

    /**
     * Create a detached, initialised TaskQueueRecord
     */
    public TaskQueueRecord(Integer id, String userIdentifier, Integer priority, String taskUuid, String taskName, String taskDescription, String taskData, Boolean inProcess, LocalDateTime submittedDate) {
        super(TaskQueue.TASK_QUEUE);

        setId(id);
        setUserIdentifier(userIdentifier);
        setPriority(priority);
        setTaskUuid(taskUuid);
        setTaskName(taskName);
        setTaskDescription(taskDescription);
        setTaskData(taskData);
        setInProcess(inProcess);
        setSubmittedDate(submittedDate);
    }
}
