/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables.records;


import gov.epa.bencloud.server.database.jooq.tables.TaskWorker;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskWorkerRecord extends UpdatableRecordImpl<TaskWorkerRecord> implements Record4<Long, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>data.task_worker.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>data.task_worker.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>data.task_worker.task_worker_uuid</code>.
     */
    public void setTaskWorkerUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>data.task_worker.task_worker_uuid</code>.
     */
    public String getTaskWorkerUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>data.task_worker.task_uuid</code>.
     */
    public void setTaskUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>data.task_worker.task_uuid</code>.
     */
    public String getTaskUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>data.task_worker.last_heartbeat_date</code>.
     */
    public void setLastHeartbeatDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>data.task_worker.last_heartbeat_date</code>.
     */
    public LocalDateTime getLastHeartbeatDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TaskWorker.TASK_WORKER.ID;
    }

    @Override
    public Field<String> field2() {
        return TaskWorker.TASK_WORKER.TASK_WORKER_UUID;
    }

    @Override
    public Field<String> field3() {
        return TaskWorker.TASK_WORKER.TASK_UUID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TaskWorker.TASK_WORKER.LAST_HEARTBEAT_DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTaskWorkerUuid();
    }

    @Override
    public String component3() {
        return getTaskUuid();
    }

    @Override
    public LocalDateTime component4() {
        return getLastHeartbeatDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTaskWorkerUuid();
    }

    @Override
    public String value3() {
        return getTaskUuid();
    }

    @Override
    public LocalDateTime value4() {
        return getLastHeartbeatDate();
    }

    @Override
    public TaskWorkerRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TaskWorkerRecord value2(String value) {
        setTaskWorkerUuid(value);
        return this;
    }

    @Override
    public TaskWorkerRecord value3(String value) {
        setTaskUuid(value);
        return this;
    }

    @Override
    public TaskWorkerRecord value4(LocalDateTime value) {
        setLastHeartbeatDate(value);
        return this;
    }

    @Override
    public TaskWorkerRecord values(Long value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TaskWorkerRecord
     */
    public TaskWorkerRecord() {
        super(TaskWorker.TASK_WORKER);
    }

    /**
     * Create a detached, initialised TaskWorkerRecord
     */
    public TaskWorkerRecord(Long id, String taskWorkerUuid, String taskUuid, LocalDateTime lastHeartbeatDate) {
        super(TaskWorker.TASK_WORKER);

        setId(id);
        setTaskWorkerUuid(taskWorkerUuid);
        setTaskUuid(taskUuid);
        setLastHeartbeatDate(lastHeartbeatDate);
    }
}
