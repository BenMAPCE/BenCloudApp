/*
 * This file is generated by jOOQ.
 */
package gov.epa.bencloud.server.database.jooq.tables;


import gov.epa.bencloud.server.database.jooq.Data;
import gov.epa.bencloud.server.database.jooq.tables.records.PopConfigGenderRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PopConfigGender extends TableImpl<PopConfigGenderRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>data.pop_config_gender</code>
     */
    public static final PopConfigGender POP_CONFIG_GENDER = new PopConfigGender();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PopConfigGenderRecord> getRecordType() {
        return PopConfigGenderRecord.class;
    }

    /**
     * The column <code>data.pop_config_gender.pop_config_id</code>.
     */
    public final TableField<PopConfigGenderRecord, Integer> POP_CONFIG_ID = createField(DSL.name("pop_config_id"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>data.pop_config_gender.gender_id</code>.
     */
    public final TableField<PopConfigGenderRecord, Integer> GENDER_ID = createField(DSL.name("gender_id"), SQLDataType.INTEGER, this, "");

    private PopConfigGender(Name alias, Table<PopConfigGenderRecord> aliased) {
        this(alias, aliased, null);
    }

    private PopConfigGender(Name alias, Table<PopConfigGenderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>data.pop_config_gender</code> table reference
     */
    public PopConfigGender(String alias) {
        this(DSL.name(alias), POP_CONFIG_GENDER);
    }

    /**
     * Create an aliased <code>data.pop_config_gender</code> table reference
     */
    public PopConfigGender(Name alias) {
        this(alias, POP_CONFIG_GENDER);
    }

    /**
     * Create a <code>data.pop_config_gender</code> table reference
     */
    public PopConfigGender() {
        this(DSL.name("pop_config_gender"), null);
    }

    public <O extends Record> PopConfigGender(Table<O> child, ForeignKey<O, PopConfigGenderRecord> key) {
        super(child, key, POP_CONFIG_GENDER);
    }

    @Override
    public Schema getSchema() {
        return Data.DATA;
    }

    @Override
    public PopConfigGender as(String alias) {
        return new PopConfigGender(DSL.name(alias), this);
    }

    @Override
    public PopConfigGender as(Name alias) {
        return new PopConfigGender(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PopConfigGender rename(String name) {
        return new PopConfigGender(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PopConfigGender rename(Name name) {
        return new PopConfigGender(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
